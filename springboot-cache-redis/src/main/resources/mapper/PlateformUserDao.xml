<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bytelion.cache.dao.PlateformUserDao">

    <resultMap type="com.bytelion.cache.entity.PlateformUser" id="PlateformUserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="userName" column="user_name" jdbcType="VARCHAR"/>
        <result property="isDeleted" column="is_deleted" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="PlateformUserMap">
        select
          id, create_time, update_time, user_name, is_deleted
        from bytelion.plateform_user
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="PlateformUserMap">
        select
          id, create_time, update_time, user_name, is_deleted
        from bytelion.plateform_user
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="PlateformUserMap">
        select
        id, create_time, update_time, user_name, is_deleted
        from bytelion.plateform_user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="userName != null and userName != ''">
                and user_name = #{userName}
            </if>
            <if test="isDeleted != null">
                and is_deleted = #{isDeleted}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into bytelion.plateform_user(create_time, update_time, user_name, is_deleted)
        values (#{createTime}, #{updateTime}, #{userName}, #{isDeleted})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into bytelion.plateform_user(create_time, update_time, user_name, is_deleted)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.createTime}, #{entity.updateTime}, #{entity.userName}, #{entity.isDeleted})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into bytelion.plateform_user(create_time, update_time, user_name, is_deleted)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.createTime}, #{entity.updateTime}, #{entity.userName}, #{entity.isDeleted})
        </foreach>
        on duplicate key update
        create_time = values(create_time) , update_time = values(update_time) , user_name = values(user_name) ,
        is_deleted = values(is_deleted)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update bytelion.plateform_user
        <set>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="userName != null and userName != ''">
                user_name = #{userName},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from bytelion.plateform_user where id = #{id}
    </delete>

</mapper>